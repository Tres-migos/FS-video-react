{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/projects/FS-video-web/src/Pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, Header, Grid } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080/account',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n});\nexport default function Register() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function onSubmit(event) {\n    const account = {\n      username,\n      password\n    };\n    axios.post('http://localhost:8080/account/create', account); //.then(response => this.setState({ articleId: response.data.id }));\n    //.then(console.log(\"Account was made\"))\n\n    console.log(username);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    justified: true,\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 700,\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: username,\n            name: \"username\",\n            type: \"username\",\n            placeholder: \"Username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: password,\n            name: \"password\",\n            type: \"Password\",\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          primary: true,\n          onClick: onSubmit,\n          type: \"submit\",\n          disabled: !validateForm(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/nathan/projects/FS-video-web/src/Pages/Register.js"],"names":["React","useState","axios","Button","Form","Header","Grid","instance","create","baseURL","headers","Register","username","setUsername","password","setPassword","validateForm","length","onSubmit","event","account","post","console","log","maxWidth","marginTop","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,QAA4C,mBAA5C;;AAIA,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,+BADmB;AAE5BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFmB,CAAb,CAAjB;AAOA,eAAe,SAASC,QAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AAGA,WAASe,YAAT,GAAuB;AACrB,WAAOJ,QAAQ,CAACK,MAAT,GAAkB,CAAlB,IAAuBH,QAAQ,CAACG,MAAT,GAAkB,CAAhD;AACD;;AAED,WAASC,QAAT,CAAmBC,KAAnB,EAA2B;AAEzB,UAAMC,OAAO,GAAG;AAAER,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAhB;AACAZ,IAAAA,KAAK,CAACmB,IAAN,CAAW,sCAAX,EAAmDD,OAAnD,EAHyB,CAIrB;AACA;;AACJE,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACD;;AAKD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,2BACI,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAACY,QAAAA,QAAQ,EAAC,GAAV;AAAeC,QAAAA,SAAS,EAAE;AAA1B,OAApB;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGJ,QAAC,IAAD;AAAA,gCACA,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACA,YAAA,KAAK,EAAEb,QADP;AAEA,YAAA,IAAI,EAAG,UAFP;AAGA,YAAA,IAAI,EAAC,UAHL;AAIA,YAAA,WAAW,EAAC,UAJZ;AAKA,YAAA,QAAQ,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAUA,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACA,YAAA,KAAK,EAAEd,QADP;AAEA,YAAA,IAAI,EAAE,UAFN;AAGA,YAAA,IAAI,EAAC,UAHL;AAIA,YAAA,WAAW,EAAC,UAJZ;AAKA,YAAA,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVA,eAoBA,QAAC,MAAD;AACE,UAAA,KAAK,MADP;AACQ,UAAA,OAAO,MADf;AAEE,UAAA,OAAO,EAAIV,QAFb;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,QAAQ,EAAE,CAACF,YAAY,EAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAzDuBL,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\nimport { Button, Form, Header, Grid, } from 'semantic-ui-react'\n\n\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080/account',\n  headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n  },\n});\n\nexport default function Register () {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n\n  function validateForm(){\n    return username.length > 0 && password.length > 0;\n  }\n\n  function onSubmit (event)  {\n    \n    const account = { username, password };\n    axios.post('http://localhost:8080/account/create', account)\n        //.then(response => this.setState({ articleId: response.data.id }));\n        //.then(console.log(\"Account was made\"))\n    console.log(username)\n  }\n  \n  \n\n\n  return(\n    <Grid justified>\n        <Grid.Column style={{maxWidth:700, marginTop: 20 }}>\n            <Header>Register</Header>\n\n    <Form >\n    <Form.Field>\n      <label>Username</label>\n      <input \n      value={username}\n      name = 'username' \n      type='username'\n      placeholder=\"Username\" \n      onChange={(e) => setUsername(e.target.value)} />\n    </Form.Field>\n    <Form.Field>\n      <label>Password</label>\n      <input \n      value={password}\n      name= 'password' \n      type='Password'\n      placeholder=\"Password\" \n      onChange={(e) => setPassword(e.target.value)}/>\n    </Form.Field>\n  \n    <Button \n      fluid primary\n      onClick = {onSubmit} \n      type='submit' \n      disabled={!validateForm()}>Submit</Button>\n  </Form>\n        </Grid.Column>\n        \n    </Grid>\n  );\n  \n}\n"]},"metadata":{},"sourceType":"module"}