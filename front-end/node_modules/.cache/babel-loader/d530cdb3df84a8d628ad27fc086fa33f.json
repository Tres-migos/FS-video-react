{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/projects/FS-video-web/src/components/media/DisplayMedia.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Dimmer, Loader, Image, Segment, Grid, Embed } from 'semantic-ui-react';\nimport { Carousel } from '3d-react-carousal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080/video',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n});\n\nconst DisplayMedia = ({\n  media\n}) => {\n  _s();\n\n  const [isLoading, setLoading] = useState(false);\n  const [video, setVideo] = useState([]);\n  const [slides, setSlides] = useState([]);\n\n  const handleLoader = () => {\n    setLoading(isLoading => !isLoading);\n  };\n\n  const getMediaURL = async () => {\n    handleLoader();\n    let media_URL = \"\";\n    media_URL = await instance.get(`/${media.bucketName}/${media.key}`);\n    setVideo(media_URL.data);\n  };\n\n  useEffect(() => {\n    getMediaURL();\n    handleLoader();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && video == null && /*#__PURE__*/_jsxDEV(Dimmer, {\n      active: true,\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        size: \"large\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 44\n    }, this), !isLoading && video != null && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '5%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Embed, {\n        url: video\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DisplayMedia, \"Q48GLpItRHx/bV6Kom/8PIgJ3xw=\");\n\n_c = DisplayMedia;\nexport default DisplayMedia;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayMedia\");","map":{"version":3,"sources":["/Users/nathan/projects/FS-video-web/src/components/media/DisplayMedia.js"],"names":["React","useState","useEffect","axios","Dimmer","Loader","Image","Segment","Grid","Embed","Carousel","instance","create","baseURL","headers","DisplayMedia","media","isLoading","setLoading","video","setVideo","slides","setSlides","handleLoader","getMediaURL","media_URL","get","bucketName","key","data","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CC,KAA/C,QAA4D,mBAA5D;AACA,SAAQC,QAAR,QAAuB,mBAAvB;;;AAEA,MAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,6BADiB;AAE1BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFiB,CAAb,CAAjB;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMsB,YAAY,GAAG,MAAM;AACvBL,IAAAA,UAAU,CAACD,SAAS,IAAI,CAACA,SAAf,CAAV;AACH,GAFD;;AAIA,QAAMO,WAAW,GAAG,YAAY;AAC5BD,IAAAA,YAAY;AACZ,QAAIE,SAAS,GAAG,EAAhB;AACAA,IAAAA,SAAS,GAAG,MAAMd,QAAQ,CAACe,GAAT,CAAc,IAAGV,KAAK,CAACW,UAAW,IAAGX,KAAK,CAACY,GAAI,EAA/C,CAAlB;AACAR,IAAAA,QAAQ,CAACK,SAAS,CAACI,IAAX,CAAR;AACH,GALD;;AAOA3B,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,WAAW;AACXD,IAAAA,YAAY;AACf,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,eACKN,SAAS,IAAIE,KAAK,IAAI,IAAtB,iBAA8B,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA,6BAAe,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,YADnC,EAGQ,CAACF,SAAD,IAAcE,KAAK,IAAI,IAAvB,iBACA;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,6BACA,QAAC,KAAD;AACI,QAAA,GAAG,EAAEX;AADT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA,kBADJ;AAgBH,CArCD;;GAAMJ,Y;;KAAAA,Y;AAuCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Dimmer, Loader, Image, Segment, Grid, Embed } from 'semantic-ui-react'\nimport {Carousel} from '3d-react-carousal';\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:8080/video',\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    },\n  });\n\nconst DisplayMedia = ({ media }) => {\n    const [isLoading, setLoading] = useState(false)\n    const [video, setVideo] = useState([])\n    const [slides, setSlides] = useState([])\n\n    const handleLoader = () => {\n        setLoading(isLoading => !isLoading)\n    }\n\n    const getMediaURL = async () => {\n        handleLoader()\n        let media_URL = \"\"\n        media_URL = await instance.get(`/${media.bucketName}/${media.key}`)\n        setVideo(media_URL.data)\n    }\n\n    useEffect(() => {\n        getMediaURL()\n        handleLoader()\n    }, [])\n\n    return (\n        <>\n            {isLoading && video == null && <Dimmer active><Loader size='large'>Loading</Loader></Dimmer>}\n            {\n                !isLoading && video != null &&\n                <div style={{ padding: '5%'}}>\n                <Embed\n                    url={video}\n                />\n                </div>\n\n            }\n\n        </>\n    )\n\n}\n\nexport default DisplayMedia"]},"metadata":{},"sourceType":"module"}