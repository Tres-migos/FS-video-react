{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Dev/fullstack-video/front-end/src/components/media/DisplayMediaGroups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Dimmer, Loader, Image, Segment, Grid } from 'semantic-ui-react';\nimport DisplayMedia from './DisplayMedia';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080/video',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n});\n\nconst DisplayMediaGroups = () => {\n  _s();\n\n  const [trendingVideos, setTrendingVideos] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  const handleLoader = () => {\n    setLoading(isLoading => !isLoading);\n  };\n\n  const getAllTrendingMedia = async () => {\n    handleLoader();\n    let s3objects = [];\n    s3objects = await instance.get(\"/all\");\n    setTrendingVideos(s3objects.data.objectSummaries);\n  };\n\n  useEffect(() => {\n    getAllTrendingMedia();\n    handleLoader();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && trendingVideos == null && /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 4,\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            children: /*#__PURE__*/_jsxDEV(Dimmer, {\n              active: true,\n              children: /*#__PURE__*/_jsxDEV(Loader, {\n                size: \"large\",\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), !isLoading && trendingVideos != null && /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 4,\n      fluid: true,\n      padded: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: trendingVideos.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: /*#__PURE__*/_jsxDEV(DisplayMedia, {\n              media: e\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DisplayMediaGroups, \"NkZOT4gvXYT5xKfTX0EEGff3yzs=\");\n\n_c = DisplayMediaGroups;\nexport default DisplayMediaGroups;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayMediaGroups\");","map":{"version":3,"sources":["/Users/nathan/Dev/fullstack-video/front-end/src/components/media/DisplayMediaGroups.js"],"names":["React","useState","useEffect","axios","Dimmer","Loader","Image","Segment","Grid","DisplayMedia","instance","create","baseURL","headers","DisplayMediaGroups","trendingVideos","setTrendingVideos","isLoading","setLoading","handleLoader","getAllTrendingMedia","s3objects","get","data","objectSummaries","map","e","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyCC,IAAzC,QAAqD,mBAArD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,6BADiB;AAE1BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFiB,CAAb,CAAjB;;AAOA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACgB,SAAD,EAAYC,UAAZ,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMkB,YAAY,GAAG,MAAM;AACvBD,IAAAA,UAAU,CAACD,SAAS,IAAI,CAACA,SAAf,CAAV;AACH,GAFD;;AAIA,QAAMG,mBAAmB,GAAG,YAAY;AACpCD,IAAAA,YAAY;AACZ,QAAIE,SAAS,GAAG,EAAhB;AACAA,IAAAA,SAAS,GAAG,MAAMX,QAAQ,CAACY,GAAT,CAAa,MAAb,CAAlB;AACAN,IAAAA,iBAAiB,CAACK,SAAS,CAACE,IAAV,CAAeC,eAAhB,CAAjB;AACH,GALD;;AASAtB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,mBAAmB;AACnBD,IAAAA,YAAY;AACf,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,eAEQF,SAAS,IAAIF,cAAc,IAAI,IAA/B,iBACA,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,KAAK,MAAvB;AAAA,6BACI,QAAC,IAAD,CAAM,GAAN;AAAA,+BACI,QAAC,IAAD,CAAM,MAAN;AAAA,iCACI,QAAC,OAAD;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,MAAM,MAAd;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHR,EAiBQ,CAACE,SAAD,IAAcF,cAAc,IAAI,IAAhC,iBACA,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,KAAK,MAAvB;AAAwB,MAAA,MAAM,MAA9B;AAAA,6BACM,QAAC,IAAD,CAAM,GAAN;AAAA,kBACGA,cAAc,CAACU,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,8BACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,YAAD;AAAc,cAAA,KAAK,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ,aAAkBC,CAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANA;AADH;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA,kBADJ;AAoCH,CA1DD;;GAAMb,kB;;KAAAA,kB;AA4DN,eAAeA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Dimmer, Loader, Image, Segment, Grid } from 'semantic-ui-react'\nimport DisplayMedia from './DisplayMedia'\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:8080/video',\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    },\n  });\n\nconst DisplayMediaGroups = () => {\n    const [trendingVideos, setTrendingVideos] = useState(null)\n    const [isLoading, setLoading] = useState(false)\n\n    const handleLoader = () => {\n        setLoading(isLoading => !isLoading)\n    }\n\n    const getAllTrendingMedia = async () => {\n        handleLoader()\n        let s3objects = []\n        s3objects = await instance.get(\"/all\")\n        setTrendingVideos(s3objects.data.objectSummaries)\n    }\n\n    \n\n    useEffect(() => {\n        getAllTrendingMedia()\n        handleLoader()\n    }, [])\n\n    return (\n        <>\n            {\n                isLoading && trendingVideos == null &&\n                <Grid columns={4} fluid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Segment>\n                                <Dimmer active>\n                                    <Loader size='large'>Loading</Loader>\n                                </Dimmer>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }            \n\n            {\n                !isLoading && trendingVideos != null &&\n                <Grid columns={4} fluid padded>\n                      <Grid.Row>\n                        {trendingVideos.map((e, i) => {\n                            return (\n                                <Grid.Column key={i}>\n                                    <DisplayMedia media={e} />\n                                </Grid.Column>\n                            )\n                        })}\n                        </Grid.Row>\n                </Grid>\n            }\n        </>\n\n    )\n\n\n}\n\nexport default DisplayMediaGroups"]},"metadata":{},"sourceType":"module"}