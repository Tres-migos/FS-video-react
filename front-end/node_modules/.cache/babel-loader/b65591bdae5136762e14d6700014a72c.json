{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/projects/FS-video-web/src/Pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, Header, Grid, Segment } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { useAppContext } from '../lib/contextLib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    userHasAuthenticated\n  } = useAppContext();\n  const history = useHistory();\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function register() {\n    const account = {\n      username,\n      password\n    };\n\n    try {\n      await axios.post('http://localhost:8080/account/create', account);\n      userHasAuthenticated(true);\n      history.push(\"/\");\n    } catch (e) {\n      userHasAuthenticated(false);\n      alert(e.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 600,\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        raised: true,\n        padded: \"very\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: username,\n              placeholder: \"Username\",\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: password,\n              type: \"Password\",\n              placeholder: \"Password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fluid: true,\n            primary: true,\n            onClick: register,\n            type: \"submit\",\n            disabled: !validateForm(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"lGOHeALexjZMaPO1H6DUzkoY2u4=\", false, function () {\n  return [useAppContext, useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/nathan/projects/FS-video-web/src/Pages/Register.js"],"names":["React","useState","axios","Button","Form","Header","Grid","Segment","useHistory","useAppContext","Register","username","setUsername","password","setPassword","userHasAuthenticated","history","validateForm","length","register","account","post","push","e","alert","message","maxWidth","marginTop","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\nimport { Button, Form, Header, Grid, Segment} from 'semantic-ui-react'\nimport {useHistory} from 'react-router-dom'\nimport { useAppContext } from '../lib/contextLib'\n\n\n\n\n\nexport default function Register () {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {userHasAuthenticated} = useAppContext();\n  const history = useHistory()\n  \n\n  function validateForm(){\n    return username.length > 0 && password.length > 0;\n  }\n\n\n  async function register() {\n    const account = { username, password };\n    try {\n      await axios.post('http://localhost:8080/account/create', account)\n      userHasAuthenticated(true)\n      history.push(\"/\")\n    } catch (e) {\n      userHasAuthenticated(false)\n      alert(e.message)\n    }\n  }\n  \n\n\n  return (\n    <Grid centered>\n      <Grid.Column style={{ maxWidth: 600, marginTop: 20 }}>\n        <Segment raised padded='very'>\n          <Header>Register</Header>\n          <Form >\n            <Form.Field>\n              <label>Username</label>\n              <input\n                value={username}\n                placeholder=\"Username\"\n                onChange={(e) => setUsername(e.target.value)} />\n            </Form.Field>\n            <Form.Field>\n              <label>Password</label>\n              <input\n                value={password}\n                type='Password'\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)} />\n            </Form.Field>\n\n            <Button\n              fluid primary\n              onClick={register}\n              type='submit'\n              disabled={!validateForm()}>Submit</Button>\n          </Form>\n        </Segment>\n\n      </Grid.Column>\n\n    </Grid>\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}