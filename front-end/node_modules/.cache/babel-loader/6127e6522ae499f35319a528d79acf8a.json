{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/projects/FS-video-web/src/components/upload/Uploader.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080/video',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n});\n\nclass Uploader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData \n      const formData = new FormData(); // Update the formData object \n\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file \n\n      console.log(this.state.selectedFile); // Request made to the backend api \n      // Send formData object \n\n      instance.post(\"/upload\", formData);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Upload using React!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Uploader;","map":{"version":3,"sources":["/Users/nathan/projects/FS-video-web/src/components/upload/Uploader.js"],"names":["axios","React","Component","instance","create","baseURL","headers","Uploader","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","type","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,6BADiB;AAE1BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFiB,CAAb,CAAjB;;AAOA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BM,KAF6B,GAErB;AACNC,MAAAA,YAAY,EAAE;AADR,KAFqB;;AAAA,SAO7BC,YAP6B,GAOdC,KAAK,IAAI;AACtB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACD,KAV4B;;AAAA,SAa7BC,YAb6B,GAad,MAAM;AACnB;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFmB,CAInB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAKV,KAAL,CAAWC,YAFb,EAGE,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAH1B,EALmB,CAWnB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,YAAvB,EAZmB,CAcnB;AACA;;AACAN,MAAAA,QAAQ,CAACmB,IAAT,CAAc,SAAd,EAAyBN,QAAzB;AACD,KA9B4B;;AAAA,SAkC7BO,QAlC6B,GAkClB,MAAM;AACf,UAAI,KAAKf,KAAL,CAAWC,YAAf,EAA6B;AAE3B,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAe,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sCAAe,KAAKX,KAAL,CAAWC,YAAX,CAAwBe,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATD,MASO;AACL,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KApD4B;AAAA;;AAsD7BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKf;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAUG,KAAKQ,QAAL,EAVH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AArE4B;;AAwE/B,eAAehB,QAAf","sourcesContent":["import axios from 'axios';\nimport React,{Component} from 'react';\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:8080/video',\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    },\n  });\n\nclass Uploader extends Component { \n\n    state = { \n      selectedFile: null\n    }; \n     \n    // On file select (from the pop up) \n    onFileChange = event => { \n      // Update the state \n      this.setState({ selectedFile: event.target.files[0] }); \n    }; \n     \n    // On file upload (click the upload button) \n    onFileUpload = () => { \n      // Create an object of formData \n      const formData = new FormData(); \n     \n      // Update the formData object \n      formData.append( \n        \"myFile\", \n        this.state.selectedFile, \n        this.state.selectedFile.name \n      ); \n     \n      // Details of the uploaded file \n      console.log(this.state.selectedFile); \n     \n      // Request made to the backend api \n      // Send formData object \n      instance.post(\"/upload\", formData); \n    }; \n     \n    // File content to be displayed after \n    // file upload is complete \n    fileData = () => { \n      if (this.state.selectedFile) { \n          \n        return ( \n          <div> \n            <h2>File Details:</h2> \n            <p>File Name: {this.state.selectedFile.name}</p> \n            <p>File Type: {this.state.selectedFile.type}</p> \n          </div> \n        ); \n      } else { \n        return ( \n          <div> \n            <br /> \n            <h4>Choose before Pressing the Upload button</h4> \n          </div> \n        ); \n      } \n    }; \n     \n    render() { \n      return ( \n        <div> \n            <h3> \n              File Upload using React! \n            </h3> \n            <div> \n                <input type=\"file\" onChange={this.onFileChange} /> \n                <button onClick={this.onFileUpload}> \n                  Upload! \n                </button> \n            </div> \n          {this.fileData()} \n        </div> \n      ); \n    } \n  } \n  \n  export default Uploader; \n"]},"metadata":{},"sourceType":"module"}