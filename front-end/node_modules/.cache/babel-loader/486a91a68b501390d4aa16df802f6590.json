{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nathan/projects/FS-video-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nathan/projects/FS-video-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nathan/projects/FS-video-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import{Dimmer,Loader,Image,Segment,Grid}from'semantic-ui-react';import DisplayMedia from'./DisplayMedia';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var instance=axios.create({baseURL:'http://localhost:8080/video',headers:{'Content-Type':'application/x-www-form-urlencoded'}});var DisplayMediaGroups=function DisplayMediaGroups(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),trendingVideos=_useState2[0],setTrendingVideos=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];var handleLoader=function handleLoader(){setLoading(function(isLoading){return!isLoading;});};var getAllTrendingMedia=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var s3objects;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:handleLoader();s3objects=[];_context.next=4;return instance.get(\"/all\");case 4:s3objects=_context.sent;setTrendingVideos(s3objects.data.objectSummaries);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getAllTrendingMedia(){return _ref.apply(this,arguments);};}();useEffect(function(){getAllTrendingMedia();handleLoader();},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[isLoading&&trendingVideos==null&&/*#__PURE__*/_jsx(Grid,{columns:4,fluid:true,children:/*#__PURE__*/_jsx(Grid.Row,{children:/*#__PURE__*/_jsx(Grid.Column,{children:/*#__PURE__*/_jsx(Segment,{children:/*#__PURE__*/_jsx(Dimmer,{active:true,children:/*#__PURE__*/_jsx(Loader,{size:\"large\",children:\"Loading\"})})})})})}),!isLoading&&trendingVideos!=null&&/*#__PURE__*/_jsx(Grid,{columns:4,fluid:true,padded:true,children:/*#__PURE__*/_jsx(Grid.Row,{children:trendingVideos.map(function(e,i){return/*#__PURE__*/_jsx(Grid.Column,{children:/*#__PURE__*/_jsx(DisplayMedia,{media:e})},i);})})})]});};export default DisplayMediaGroups;","map":{"version":3,"sources":["/Users/nathan/projects/FS-video-web/src/components/media/DisplayMediaGroups.js"],"names":["React","useState","useEffect","axios","Dimmer","Loader","Image","Segment","Grid","DisplayMedia","instance","create","baseURL","headers","DisplayMediaGroups","trendingVideos","setTrendingVideos","isLoading","setLoading","handleLoader","getAllTrendingMedia","s3objects","get","data","objectSummaries","map","e","i"],"mappings":"2cAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,KAAzB,CAAgCC,OAAhC,CAAyCC,IAAzC,KAAqD,mBAArD,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,6IAEA,GAAMC,CAAAA,QAAQ,CAAGP,KAAK,CAACQ,MAAN,CAAa,CAC1BC,OAAO,CAAE,6BADiB,CAE1BC,OAAO,CAAE,CACL,eAAgB,mCADX,CAFiB,CAAb,CAAjB,CAOA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,eACeb,QAAQ,CAAC,IAAD,CADvB,wCACtBc,cADsB,eACNC,iBADM,8BAEGf,QAAQ,CAAC,KAAD,CAFX,yCAEtBgB,SAFsB,eAEXC,UAFW,eAI7B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBD,UAAU,CAAC,SAAAD,SAAS,QAAI,CAACA,SAAL,EAAV,CAAV,CACH,CAFD,CAIA,GAAMG,CAAAA,mBAAmB,0FAAG,iJACxBD,YAAY,GACRE,SAFoB,CAER,EAFQ,uBAGNX,CAAAA,QAAQ,CAACY,GAAT,CAAa,MAAb,CAHM,QAGxBD,SAHwB,eAIxBL,iBAAiB,CAACK,SAAS,CAACE,IAAV,CAAeC,eAAhB,CAAjB,CAJwB,sDAAH,kBAAnBJ,CAAAA,mBAAmB,0CAAzB,CASAlB,SAAS,CAAC,UAAM,CACZkB,mBAAmB,GACnBD,YAAY,GACf,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACI,2BAEQF,SAAS,EAAIF,cAAc,EAAI,IAA/B,eACA,KAAC,IAAD,EAAM,OAAO,CAAE,CAAf,CAAkB,KAAK,KAAvB,uBACI,KAAC,IAAD,CAAM,GAAN,wBACI,KAAC,IAAD,CAAM,MAAN,wBACI,KAAC,OAAD,wBACI,KAAC,MAAD,EAAQ,MAAM,KAAd,uBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,qBADJ,EADJ,EADJ,EADJ,EADJ,EAHR,CAiBQ,CAACE,SAAD,EAAcF,cAAc,EAAI,IAAhC,eACA,KAAC,IAAD,EAAM,OAAO,CAAE,CAAf,CAAkB,KAAK,KAAvB,CAAwB,MAAM,KAA9B,uBACM,KAAC,IAAD,CAAM,GAAN,WACGA,cAAc,CAACU,GAAf,CAAmB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAC1B,mBACI,KAAC,IAAD,CAAM,MAAN,wBACI,KAAC,YAAD,EAAc,KAAK,CAAED,CAArB,EADJ,EAAkBC,CAAlB,CADJ,CAKH,CANA,CADH,EADN,EAlBR,GADJ,CAoCH,CA1DD,CA4DA,cAAeb,CAAAA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Dimmer, Loader, Image, Segment, Grid } from 'semantic-ui-react'\nimport DisplayMedia from './DisplayMedia'\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:8080/video',\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    },\n  });\n\nconst DisplayMediaGroups = () => {\n    const [trendingVideos, setTrendingVideos] = useState(null)\n    const [isLoading, setLoading] = useState(false)\n\n    const handleLoader = () => {\n        setLoading(isLoading => !isLoading)\n    }\n\n    const getAllTrendingMedia = async () => {\n        handleLoader()\n        let s3objects = []\n        s3objects = await instance.get(\"/all\")\n        setTrendingVideos(s3objects.data.objectSummaries)\n    }\n\n    \n\n    useEffect(() => {\n        getAllTrendingMedia()\n        handleLoader()\n    }, [])\n\n    return (\n        <>\n            {\n                isLoading && trendingVideos == null &&\n                <Grid columns={4} fluid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Segment>\n                                <Dimmer active>\n                                    <Loader size='large'>Loading</Loader>\n                                </Dimmer>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }            \n\n            {\n                !isLoading && trendingVideos != null &&\n                <Grid columns={4} fluid padded>\n                      <Grid.Row>\n                        {trendingVideos.map((e, i) => {\n                            return (\n                                <Grid.Column key={i}>\n                                    <DisplayMedia media={e} />\n                                </Grid.Column>\n                            )\n                        })}\n                        </Grid.Row>\n                </Grid>\n            }\n        </>\n\n    )\n\n\n}\n\nexport default DisplayMediaGroups"]},"metadata":{},"sourceType":"module"}